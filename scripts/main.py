import json
import random
import re
from datetime import date

import click
import pandas as pd
import yaml
from vk_api import VkApi
from vk_api.bot_longpoll import VkBotEventType, VkBotLongPoll

CHANCE = 17


@click.command()
@click.option('--debug/--no-debug', default=False)
def main(debug):
    with open('config.yml') as f_c:
        config = yaml.safe_load(f_c)
    token = config['token']
    groupID = config['group_id']  # id —Å–æ–æ–±—â–µ—Å—Ç–≤–∞ (–Ω–µ —á–∞—Ç–∞)
    vk_session = VkApi(token=token)  # –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è
    longpoll = VkBotLongPoll(vk_session, groupID)
    global VK, PEER_ID
    VK = vk_session.get_api()
    chat_id = int(config['chat_id'])
    if debug:
        chat_id = 4
    PEER_ID = 2000000000 + chat_id
    with open(config['user_ids_json'], 'r', encoding='utf-8') as fh:
        dicts = json.load(fh)
    if debug:
        send("–†–∞–±–æ—Ç–∞–µ–º")
    for event in longpoll.listen():
        if event.type == VkBotEventType.MESSAGE_NEW and event.from_chat:
            print(event)
            message_text = event.object['message']['text'].lower()
            if message_text == '/—á–ª–µ–Ω':
                calculate_dick_size(
                    str(event.object['message']['from_id']), dicts['users'])
            if findWord(message_text, "–±–æ—Ç"):
                words = message_text.split()
                if len(words) == 3 and words[1] == '–ø–æ–∑–æ–≤–∏':
                    if (words[2] == '–≤–ª–∞–¥–∞'):
                        outcome_text = f'@freebadman({random.choice(dicts["Matvey_inc_dict"]["purple"][1])})'
                    elif (words[2] == '—Å–µ–º–µ–Ω–∞') or (words[2] == '—Å–µ–º—ë–Ω–∞') or (words[2] == 'c—ë–º—É') or (words[2] == 'c–µ–º—É'):
                        outcome_text = f'@voidrad({random.choice(dicts["Matvey_inc_dict"]["green"][1])})'
                    elif (words[2] == '—Å–∞—à—É'):
                        outcome_text = f'@id_alejandr0({random.choice(dicts["Matvey_inc_dict"]["sasha"][1])})'
                    elif (words[2] == '–Ω–∏–∫–∏—Ç—É'):
                        outcome_text = f'@08kuy({random.choice(dicts["Matvey_inc_dict"]["orange"][1])})'
                    elif (words[2] == '–∫–æ–ª—é'):
                        outcome_text = f'@k_o_l_y_a_24({random.choice(dicts["Matvey_inc_dict"]["yellow"][1])})'
                    elif (words[2] == '–º–æ—Ç—é') or (words[2] == '–º–∞—Ç–≤–µ—è'):
                        outcome_text = f'@whitewolf185({random.choice(dicts["Matvey_inc_dict"]["red"][1])})'
                    elif (words[2] == '–∏—Ä–∫—É') or (words[2] == '—à–ª—é—Ö—É') or (words[2] == '–∏—Ä—É'):
                        outcome_text = f'@zhur__zhur({random.choice(dicts["Matvey_inc_dict"]["shluha"][1])})'
                    elif (words[2] == '–¥–∏–Ω—é') or (words[2] == '–¥–µ–Ω–∏—Å–∞'):
                        outcome_text = f'@deeenizka({random.choice(dicts["Matvey_inc_dict"]["blue"][1])})'
                    if outcome_text != None:
                        send(outcome_text)
            if message_text == '/–≥–æ –¥–æ—Ç–∞':
                doters = dicts['doters']
                outcome_message = go_dota(doters, str(
                    event.object['message']['from_id']))
                send(outcome_message)


def go_dota(doters, from_id):
    if from_id in list(doters.keys()):
        doter_2_kick = set([doters[from_id]])
        doters_2_poke = list(set(list(doters.values()))-doter_2_kick)
        mes = ''
        words = ['–≥–æ', " –¥", "–æ", "—Ç", "–∞"]
        for i in range(len(doters_2_poke)):
            mes += doters_2_poke[i]+'('+words[i]+')'
        return mes
    return '–¢–µ–±–µ –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ –∑–≤–∞—Ç—å –≤—Å–µ—Ö –≤ –¥–æ—Ç—É, –∏–¥–∏ –Ω–∞—Ö—É–π'


def calculate_dick_size(user_id, id_2_name):
    today = date.today().strftime("%d/%m/%Y")
    try:
        dicks = pd.read_csv('dicks_sizes.csv')
        if dicks['ymd'] == today:
            length = int(dicks[user_id].values[0])
        else:
            raise Exception
    except KeyError:
        length = write_pisulku(dicks, user_id, today)
    finally:
        dicks = pd.DataFrame(index=[0])
        length = write_pisulku(dicks, user_id, today)
    if length < 10:
        emoji = 'üò•'
    elif length < 15:
        emoji = 'üòî'
    elif length < 17:
        emoji = 'üòØ'
    elif length < 20:
        emoji = 'üòé'
    elif length < 25:
        emoji = 'üò≥'
    elif length <= 30:
        emoji = 'üòß'
    elif length <= 35:
        emoji = 'üò®'
    possible_text = ['—Ç–≤–æ–π —É–¥–∞–≤ —Ü–µ–ª—ã—Ö', '–∞–≤—Ç–æ—Ä–∏—Ç–µ—Ç —É —Ç–µ–±—è —Ü–µ–ª—ã—Ö', '—Ç–≤–æ–π —á–ª–µ–Ω–æ—Ö–µ—Ä –∞–∂',
                     "–¥—É–¥—É–ª—å–∫–∞ —Ç–≤–æ—è —Ü–µ–ª—ã—Ö", "—Ç–≤–æ–π —á—É–ø–∞-—á—É–ø—Å –¥–ª–∏–Ω–æ–π", "—Ç–≤–æ—è –∫–æ–ª–±–∞—Å–∫–∞ –∞–∂",
                     '—Ç–≤–æ—è –º—è—Å–Ω–∞—è –ø—É—à–∫–∞ –¥–ª–∏–Ω–æ–π', "—Ç—ã –º–æ–∂–µ—à—å –¥–∞—Ç—å –ø—Ä–∏–∫—É—Ä–∏—Ç—å —Å–∏–≥–∞—Ä–µ—Ç–∫—É –¥–ª–∏–Ω–æ–π",
                     "—Ç–≤–æ—è –ø–∏—Å—é–ª—å–∫–∞ —Ü–µ–ª—ã—Ö", "—Ç–≤–æ—è –≤–æ–ª—à–µ–±–Ω–∞—è –ø–∞–ª–æ—á–∫–∞", "—Å —Ç–∞–∫–∏–º –¥—Ä—ã–Ω–æ–º —à—É—Ç–∫–∏ –ø–ª–æ—Ö–∏ -- —Ü–µ–ª—ã—Ö"]
    message_outcome = id_2_name[user_id] + ', ' + \
        random.choice(possible_text) + ' ' + str(length) + '—Å–º ' + emoji
    send(message_outcome)


def write_pisulku(dicks, user_id, today):
    length = random_dick_size()
    dicks[user_id] = length
    dicks['ymd'] = today
    dicks.to_csv('dicks_sizes.csv', index=True)
    return length


def random_dick_size():
    chance = random.randint(1, 20)
    if chance < 15:
        return random.randint(1, 24)
    elif chance < 20:
        return random.randint(25, 30)
    else:
        return random.randint(31, 35)


def send(msg):
    return VK.messages.send(random_id=random.randint(0, 999999), message=msg, peer_id=PEER_ID)


def findWord(msg, word):
    raw = '\\b'+word+',?\\b'
    result = re.search(r''+raw, msg)
    return result != None


if __name__ == '__main__':
    main()
